{
  "api_routes_overview": {
    "description": "Complete thematic API structure for NFT Marketplace",
    "last_updated": "2025-09-13",
    "structure_philosophy": "Thematic grouping by domain: /nft/ for all NFT-related operations, /user/ for user interactions",
    "benefits": [
      "Intuitive navigation - all NFT operations under /nft/",
      "Clear separation of concerns - admin, public, user domains",
      "Scalable structure - easy to add new features",
      "RESTful design patterns maintained"
    ],
    "categories": {
      "nft_routes": {
        "description": "All NFT-related APIs grouped thematically",
        "base_path": "/api/nft/",
        "subcategories": {
          "admin_management": {
            "description": "Admin-only routes for content management (Create, Update, Delete)",
            "authentication": "Admin access required",
            "routes": {
              "/api/nft/admin/insights": {
                "methods": ["POST", "PUT", "DELETE"],
                "collection": "admin_nft_insights",
                "description": "Manage NFT-specific admin insights",
                "data_structure": {
                  "contractAddress": "string (required)",
                  "tokenId": "string (required)",
                  "title": "string (required)",
                  "description": "string (optional)",
                  "category": "string (optional)",
                  "tags": "string[] (optional)",
                  "rarity": "enum: common|uncommon|rare|epic|legendary (optional)",
                  "projectName": "string (optional)",
                  "projectDescription": "string (optional)",
                  "projectWebsite": "string (optional)",
                  "projectTwitter": "string (optional)",
                  "projectDiscord": "string (optional)",
                  "partnerships": "string[] (optional)",
                  "partnershipDetails": "string (optional)",
                  "createdBy": "string (auto-generated)",
                  "createdAt": "ISO string (auto-generated)",
                  "updatedAt": "ISO string (auto-generated)"
                },
                "operations": {
                  "POST": "Create new NFT insights",
                  "PUT": "Update existing NFT insights (upsert)",
                  "DELETE": "Delete NFT insights by contractAddress + tokenId"
                }
              },
              "/api/nft/admin/insights/collections": {
                "methods": ["POST", "PUT", "DELETE"],
                "collection": "admin_collection_insights",
                "description": "Manage collection-wide admin insights",
                "data_structure": {
                  "contractAddress": "string (required)",
                  "title": "string (required)",
                  "description": "string (optional)",
                  "category": "string (optional)",
                  "tags": "string[] (optional)",
                  "rarity": "enum: common|uncommon|rare|epic|legendary (optional)",
                  "projectName": "string (optional)",
                  "projectDescription": "string (optional)",
                  "projectWebsite": "string (optional)",
                  "projectTwitter": "string (optional)",
                  "projectDiscord": "string (optional)",
                  "partnerships": "string[] (optional)",
                  "partnershipDetails": "string (optional)",
                  "createdBy": "string (auto-generated)",
                  "createdAt": "ISO string (auto-generated)",
                  "updatedAt": "ISO string (auto-generated)"
                },
                "operations": {
                  "POST": "Create new collection insights",
                  "PUT": "Update existing collection insights (upsert)",
                  "DELETE": "Delete collection insights by contractAddress"
                }
              }
            }
          },
          "public_access": {
            "description": "Public read-only access to admin-created insights",
            "authentication": "None required",
            "routes": {
              "/api/nft/insights": {
                "methods": ["GET"],
                "collection": "admin_nft_insights",
                "description": "Public access to NFT insights data",
                "query_parameters": {
                  "contractAddress": "string (optional)",
                  "tokenId": "string (optional)",
                  "category": "string (optional)",
                  "tags": "comma-separated string (optional)",
                  "createdBy": "string (optional)",
                  "limit": "number (default: 20)",
                  "skip": "number (default: 0)",
                  "sortBy": "string (default: updatedAt)",
                  "sortOrder": "asc|desc (default: desc)"
                },
                "response": {
                  "success": "boolean",
                  "data": "array of NFT insights",
                  "dataCount": "number",
                  "totalCount": "number",
                  "hasMore": "boolean",
                  "pagination": "object"
                }
              },
              "/api/nft/insights/collections": {
                "methods": ["GET"],
                "collection": "admin_collection_insights",
                "description": "Public access to collection insights data",
                "query_parameters": {
                  "contractAddress": "string (optional)",
                  "category": "string (optional)",
                  "tags": "comma-separated string (optional)",
                  "createdBy": "string (optional)",
                  "limit": "number (default: 20)",
                  "skip": "number (default: 0)",
                  "sortBy": "string (default: updatedAt)",
                  "sortOrder": "asc|desc (default: desc)"
                },
                "response": {
                  "success": "boolean",
                  "data": "array of collection insights",
                  "dataCount": "number",
                  "totalCount": "number",
                  "hasMore": "boolean",
                  "pagination": "object"
                }
              }
            }
          },
          "data_services": {
            "description": "NFT data retrieval and blockchain integration",
            "authentication": "Varies by endpoint",
            "routes": {
              "/api/nft/stats": {
                "methods": ["GET", "POST"],
                "description": "NFT statistics and analytics",
                "query_parameters": {
                  "contractAddress": "string (required)",
                  "tokenId": "string (required)"
                },
                "response": {
                  "viewCount": "number",
                  "favoriteCount": "number",
                  "averageRating": "number",
                  "ratingCount": "number",
                  "watchlistCount": "number"
                },
                "operations": {
                  "GET": "Retrieve NFT statistics",
                  "POST": "Record NFT view/interaction"
                }
              },
              "/api/nft/metadata": {
                "methods": ["GET"],
                "description": "NFT metadata retrieval with caching",
                "query_parameters": {
                  "address": "string (required)",
                  "tokenId": "string (required)"
                },
                "response": {
                  "name": "string",
                  "description": "string",
                  "image": "string (URL)",
                  "attributes": "array of trait objects"
                },
                "caching": "24 hour cache with stale-while-revalidate"
              },
              "/api/nft/tokenURI": {
                "methods": ["GET"],
                "description": "Direct blockchain tokenURI access",
                "query_parameters": {
                  "address": "string (required)",
                  "tokenId": "string (required)"
                },
                "response": {
                  "tokenURI": "string (URL to metadata)"
                }
              }
            }
          }
        }
      },
      "user_routes": {
        "description": "User-specific data management and interactions",
        "base_path": "/api/user/",
        "authentication": "User wallet connection required",
        "routes": {
          "/api/user/interactions": {
            "methods": ["GET", "POST", "PUT"],
            "description": "Combined user interaction data for efficient retrieval",
            "collections": "user_favorites + user_ratings + user_watchlist",
            "query_parameters": {
              "userId": "string (required)",
              "contractAddress": "string (required)",
              "tokenId": "string (required)"
            },
            "response_structure": {
              "isFavorite": "boolean",
              "favoriteAddedAt": "ISO string (optional)",
              "rating": "number 1-5 (optional)",
              "ratedAt": "ISO string (optional)",
              "isWatchlisted": "boolean",
              "watchlistAddedAt": "ISO string (optional)",
              "personalNotes": "string (optional)",
              "personalRating": "number (alias for rating)",
              "strategy": "string (extensible for future features)",
              "investmentGoal": "string (extensible)",
              "riskLevel": "string (extensible)",
              "userId": "string",
              "contractAddress": "string",
              "tokenId": "string",
              "lastUpdated": "ISO string"
            },
            "operations": {
              "GET": "Retrieve all user interactions for a specific NFT",
              "POST": "Batch update user interactions (favorites, ratings, watchlist)",
              "PUT": "Alias for POST (convenience method)"
            },
            "benefits": [
              "Single API call for complete user interaction data",
              "Reduces client-side API requests from 3 to 1",
              "Extensible structure for future user statistics",
              "Optimized for NFT detail page performance"
            ]
          }
        }
      }
    },
    "data_flow": {
      "content_creation": {
        "step": 1,
        "actor": "Admin",
        "action": "Creates insights via /api/nft/admin/insights/*",
        "storage": "admin_nft_insights / admin_collection_insights collections"
      },
      "content_consumption": {
        "step": 2,
        "actor": "Public users",
        "action": "Reads insights via /api/nft/insights/*",
        "source": "admin_nft_insights / admin_collection_insights collections"
      },
      "user_interactions": {
        "step": 3,
        "actor": "Authenticated users",
        "action": "Manages personal data via /api/user/interactions",
        "storage": "user_favorites / user_ratings / user_watchlist collections"
      },
      "data_retrieval": {
        "step": 4,
        "actor": "Application",
        "action": "Fetches metadata and stats via /api/nft/metadata and /api/nft/stats",
        "source": "Blockchain + aggregated data"
      }
    },
    "database_collections": {
      "admin_nft_insights": "Admin-managed NFT insights",
      "admin_collection_insights": "Admin-managed collection insights",
      "user_favorites": "User favorite NFTs",
      "user_ratings": "User NFT ratings (1-5 stars)",
      "user_watchlist": "User watchlisted NFTs"
    },
    "migration_summary": {
      "from": "Functional grouping (/admin/, /insights/, /stats/, etc.)",
      "to": "Thematic grouping (/nft/, /user/)",
      "benefits": [
        "Improved developer experience",
        "Logical feature grouping",
        "Better scalability",
        "Cleaner API surface"
      ],
      "breaking_changes": "All API endpoints changed paths",
      "compatibility": "All hooks and components updated"
    }
  }
}